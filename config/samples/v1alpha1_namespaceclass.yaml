apiVersion: akuity.io/v1alpha1
kind: NamespaceClass
metadata:
  labels:
    app.kubernetes.io/name: namespaceclass-operator
    app.kubernetes.io/managed-by: kustomize
  name: public-network
spec:
  resources:
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: allow-public-ingress
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        podSelector: {}
        policyTypes:
          - Ingress
        ingress:
          - from:
              - ipBlock:
                  cidr: 0.0.0.0/0
---
apiVersion: akuity.io/v1alpha1
kind: NamespaceClass
metadata:
  labels:
    app.kubernetes.io/name: namespaceclass-operator
    app.kubernetes.io/managed-by: kustomize
  name: internal-network
spec:
  resources:
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: allow-vpn-only
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        podSelector: {}
        policyTypes:
          - Ingress
          - Egress
        ingress:
          - from:
              - ipBlock:
                  cidr: 10.0.0.0/8  # Example VPN CIDR
        egress:
          - to:
              - ipBlock:
                  cidr: 10.0.0.0/8  # Example VPN CIDR
    - apiVersion: v1
      kind: ResourceQuota
      metadata:
        name: internal-quota
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        hard:
          requests.cpu: "10"
          requests.memory: "10Gi"
          persistentvolumeclaims: "10"
---
# Example NamespaceClass with multiple resource types
apiVersion: akuity.io/v1alpha1
kind: NamespaceClass
metadata:
  name: dev-environment
spec:
  resources:
    - apiVersion: v1
      kind: ResourceQuota
      metadata:
        name: dev-quota
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        hard:
          requests.cpu: "50"
          requests.memory: "100Gi"
          persistentvolumeclaims: "20"
          services.loadbalancers: "2"
    - apiVersion: v1
      kind: LimitRange
      metadata:
        name: dev-limits
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        limits:
        - default:
            cpu: "1"
            memory: "1Gi"
          defaultRequest:
            cpu: "100m"
            memory: "128Mi"
          type: Container
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: default-deny-ingress
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: dev-team-admin
        labels:
          namespaceclass.akuity.io/managed: "true"
      spec:
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: admin
        subjects:
        - apiGroup: rbac.authorization.k8s.io
          kind: Group
          name: dev-team
